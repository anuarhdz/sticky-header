{"mappings":"gRAKA,G,iVCiBA,IAAAA,EACAC,E,iJArBA,IAAIC,EAAU,GAoBdF,EAlBA,SAAkBG,GAGhB,IAFA,IAAIC,EAAOC,OAAOD,KAAKD,GAEdG,EAAI,EAAGA,EAAIF,EAAKG,OAAQD,IAC/BJ,EAAQE,EAAKE,IAAMH,EAAMC,EAAKE,KAelCL,EAXA,SAAiBO,GACf,IAAIC,EAAWP,EAAQM,GAEvB,GAAgB,MAAZC,EACF,MAAM,IAAIC,MAAM,oCAAsCF,GAGxD,OAAOC,M,kCCnBTE,EAAAC,QAAiBC,OAAoB,KAAOC,EAAA,SAAAC,QAA6C,UAAWC,MAAK,IAAMF,EAAc,cCA7HA,EAAA,SAAAG,SAA8CC,KAAKC,MAAM,qGHKtDC,SAASC,cAAc,mBAAmB,EIL7CC,eAAuBC,EAASC,GAC9B,QAA4BC,KAAxBF,GAAWC,GACb,OAAO,EAET,IAAME,QAASC,SAAiBb,EAAA,eACMW,KAAxBF,GAAWC,IAAyB,IAAIG,EAAOJ,EAASC,IAC/DI,QJOP,CAPmBR,SAASC,cAAc,mBAClB,CACtBQ,KAAM,OACNC,QAAS,EACTC,YAAY,EACZC,QAAQ","sources":["src/app.js","node_modules/@parcel/runtime-js/lib/helpers/bundle-manifest.js","node_modules/@parcel/runtime-js/lib/runtime-2a16b448c569d416.js","node_modules/@parcel/runtime-js/lib/runtime-1d577a9a6a144cdd.js","src/Sliders.js"],"sourcesContent":["import { Sliders } from './Sliders';\n//import './StickyHeader';\n\n\n// home slide\nif(document.querySelector('#slider .splide')){\n  const homeSlider = document.querySelector('#slider .splide');\n  let homeSliderOptions = {\n    type: 'loop',\n    perView: 1,\n    pagination: false,\n    arrows: false,\n  }\n  Sliders(homeSlider, homeSliderOptions);\n}\n\n\n","\"use strict\";\n\nvar mapping = {};\n\nfunction register(pairs) {\n  var keys = Object.keys(pairs);\n\n  for (var i = 0; i < keys.length; i++) {\n    mapping[keys[i]] = pairs[keys[i]];\n  }\n}\n\nfunction resolve(id) {\n  var resolved = mapping[id];\n\n  if (resolved == null) {\n    throw new Error('Could not resolve bundle with id ' + id);\n  }\n\n  return resolved;\n}\n\nmodule.exports.register = register;\nmodule.exports.resolve = resolve;","module.exports = (__parcel__import__(\"./\" + require('./helpers/bundle-manifest').resolve(\"1CacD\"))).then(() => parcelRequire('3QJKV'));","require('./helpers/bundle-manifest').register(JSON.parse(\"{\\\"bVm9R\\\":\\\"index.118e0911.js\\\",\\\"1CacD\\\":\\\"splide.esm.e0ec9dfc.js\\\"}\"));","async function Sliders(element, options) {\n  if((element && options) === undefined){\n    return false;\n  }\n  let { default: Splide } = await import('@splidejs/splide');\n  let slider = (element && options) !== undefined ? new Splide(element, options) : false; \n  slider.mount();\n}\n\nexport { Sliders };"],"names":["$ef7689007096c8a0$export$6503ec6e8aabbaf","$ef7689007096c8a0$export$f7ad0328861e2f03","$ef7689007096c8a0$var$mapping","pairs","keys","Object","i","length","id","resolved","Error","module","exports","import","parcelRequire","resolve","then","register","JSON","parse","document","querySelector","async","element","options","undefined","default","Splide","mount","type","perView","pagination","arrows"],"version":3,"file":"index.118e0911.js.map"}