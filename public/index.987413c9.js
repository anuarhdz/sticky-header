class e extends HTMLElement{connectedCallback(){this.header=document.getElementById("main-header"),this.topHeader=this.header.querySelector("#top-header"),this.bottomHeader=this.header.querySelector("#bottom-header"),this.headerBounds={},this.currentScrollTop=0,this.preventReveal=!1,this.onScrollHandler=this.onScroll.bind(this),this.hideHeaderOnScrollUp=()=>this.preventReveal=!0,this.addEventListener("preventHeaderReveal",this.hideHeaderOnScrollUp),window.addEventListener("scroll",this.onScrollHandler,!1),this.createObserver()}disconnectedCallback(){window.removeEventListener("scroll",this.onScrollHandler),this.removeEventListener("preventHeaderReveal",this.hideHeaderOnScrollUp)}createObserver(){new IntersectionObserver(((e,t)=>{this.headerBounds=e[0].intersectionRect,t.disconnect()})).observe(this.header)}onScroll(){const e=window.pageYOffset||document.documentElement.scrollTop;if(e>this.currentScrollTop&&e>this.headerBounds.bottom){if(this.preventHide)return;requestAnimationFrame(this.hide.bind(this))}else e<this.currentScrollTop&&e>this.headerBounds.bottom?this.preventReveal?(window.clearTimeout(this.isScrolling),this.isScrolling=setTimeout((()=>{this.preventReveal=!1}),66),requestAnimationFrame(this.hide.bind(this))):requestAnimationFrame(this.reveal.bind(this)):e<=this.headerBounds.top&&requestAnimationFrame(this.reset.bind(this));this.currentScrollTop=e}hide(){console.log("hide"),this.currentScrollTop>200&&this.header.classList.add("sticky-header")}reveal(){console.log("reveal"),this.currentScrollTop<100&&this.header.classList.remove("sticky-header")}reset(){console.log("reset")}constructor(){super()}}customElements.define("sticky-header",e);
//# sourceMappingURL=index.987413c9.js.map
